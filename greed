/* 
그리디를 이용한 모험가 길드문제
한 마을에 모험가가 N명있습니다.
모험가 길드에서는 N명의 모험가를 대상으로 공포도를 측정했는데 공포도가 높은 모험가는 쉽게 공포를 느끼며 위험상황에서 제대로 대처할 능력이 떨어집니다 
모험가 길드장인 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정햇습니다.
동빈이는 최대 몇개의 모험가 그룹을 만들 수 있는지 궁금합니다.
동빈이를 위해 N명의 모험가에 대한 정보가 주어졌을 때 여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성하세요
ex) 입력: N = 5
         data = 2 3 1 2 2
    출력: 여행을 떠날수 있는 그룹의 최대값 

*/

#include<stdio.h>
#include<algorithm>

using namespace std;

const int MAX = 1000001;

int n;
int data[MAX];
int cnt;
int result;

bool comp(int a, int b){
  if(a > b) return true;
  else return false;
}

int main(){

 scanf("%d",&n);  //5
 for(int i=0;i<n;i++){
   scanf("%d",&data[i]); //2 3 1 2 2
 }
 
 sort(data,data+n,comp());  // 1 2 2 2 3
 
 for(int i=0;i<n;i++){
   cnt += 1;
   if(cnt >= data[i]){
     result += 1;
     cnt = 0;
   }
 }
 
 printf("%d",result);

 return 0;
}

/*
처음에 생각 했던 방식은 내림차순 정렬을 통해 최댓값 만큼 N에서 빼주자는 생각이었지만 여러가지 테스트 케이스를 만족하지못했다.
그래서 답을 확인한 후 깨달았던 것은 큰것에서 대충 넘길것이 아니라 작은것에서 부터 하나하나 해결하는것이 최적해에 도달하는 방법이라는 것을 깨달았다. 
*/
